package com.josealfonsomora.jetpackgithubtrends.data.persistence.database.entity

import androidx.room.Entity
import androidx.room.PrimaryKey
import com.josealfonsomora.jetpackgithubtrends.domain.model.GithubLicense
import com.josealfonsomora.jetpackgithubtrends.domain.model.GithubOwner
import com.josealfonsomora.jetpackgithubtrends.domain.model.GithubRepo

@Entity(tableName = "repo")
data class GithubRepoEntity(
    @PrimaryKey var id: Int,
    var nodeId: String?,
    var name: String?,
    var fullName: String?,
    var isPrivate: Boolean?,
    var owner: Int?, // Owner id
    var htmlUrl: String?,
    var description: String?,
    var fork: Boolean?,
    var url: String?,
    var forksUrl: String?,
    var keysUrlsUrl: String?,
    var collaboratorsUrl: String?,
    var teamsUrl: String?,
    var hooksUrl: String?,
    var repoIssueEventsUrl: String?,
    var eventsUrl: String?,
    var assigneesUrl: String?,
    var branchesUrl: String?,
    var tagsUrl: String?,
    var blobsUrl: String?,
    var gitTagsUrl: String?,
    var gitRefsUrl: String?,
    var treesUrl: String?,
    var statusesUrl: String?,
    var languagesUrl: String?,
    var stargazersUrl: String?,
    var contributorsUrl: String?,
    var subscribersUrl: String?,
    var subscriptionUrl: String?,
    var commitsUrl: String?,
    var gitCommitsUrl: String?,
    var commentsUrl: String?,
    var repoIssueCommentUrl: String?,
    var contentsUrl: String?,
    var compareUrl: String?,
    var mergesUrl: String?,
    var archiveUrl: String?,
    var downloadsUrl: String?,
    var repoIssuesUrl: String?,
    var pullsUrl: String?,
    var milestonesUrl: String?,
    var notificationsUrl: String?,
    var labelsUrl: String?,
    var releasesUrl: String?,
    var deploymentsUrl: String?,
    var createdAt: String?,
    var updatedAt: String?,
    var pushedAt: String?,
    var gitUrl: String?,
    var sshUrl: String?,
    var cloneUrl: String?,
    var svnUrl: String?,
    var homepage: String?,
    var size: Int?,
    var stargazersCount: Int?,
    var watchersCount: Int?,
    var language: String?,
    var hasIssues: Boolean?,
    var hasProjects: Boolean?,
    var hasDownloads: Boolean?,
    var hasWiki: Boolean?,
    var hasPages: Boolean?,
    var forksCount: Int?,
    var mirrorUrl: String?,
    var archived: Boolean?,
    var disabled: Boolean?,
    var openIssuesCount: Int?,
    var license: String?, // License key
    var forks: Int?,
    var openIssues: Int?,
    var watchers: Int?,
    var defaultBranch: String?,
    var score: Int?
)

fun GithubRepoEntity.toDomainModel(owner: GithubOwner?, license: GithubLicense?) =
    GithubRepo(
        id = this.id,
        nodeId = this.nodeId,
        name = this.name,
        fullName = this.fullName,
        private = this.isPrivate,
        owner = owner,
        htmlUrl = this.htmlUrl,
        description = this.description,
        fork = this.fork,
        url = this.url,
        forksUrl = this.forksUrl,
        keysUrlsUrl = this.keysUrlsUrl,
        collaboratorsUrl = this.collaboratorsUrl,
        teamsUrl = this.teamsUrl,
        hooksUrl = this.hooksUrl,
        issueEventsUrl = this.repoIssueEventsUrl,
        eventsUrl = this.eventsUrl,
        assigneesUrl = this.assigneesUrl,
        branchesUrl = this.branchesUrl,
        tagsUrl = this.tagsUrl,
        blobsUrl = this.blobsUrl,
        gitTagsUrl = this.gitTagsUrl,
        gitRefsUrl = this.gitRefsUrl,
        treesUrl = this.treesUrl,
        statusesUrl = this.statusesUrl,
        languagesUrl = this.languagesUrl,
        stargazersUrl = this.stargazersUrl,
        contributorsUrl = this.contributorsUrl,
        subscribersUrl = this.subscribersUrl,
        subscriptionUrl = this.subscriptionUrl,
        commitsUrl = this.commitsUrl,
        gitCommitsUrl = this.gitCommitsUrl,
        commentsUrl = this.commentsUrl,
        issueCommentUrl = this.repoIssueCommentUrl,
        contentsUrl = this.contentsUrl,
        compareUrl = this.compareUrl,
        mergesUrl = this.mergesUrl,
        archiveUrl = this.archiveUrl,
        downloadsUrl = this.downloadsUrl,
        issuesUrl = this.repoIssuesUrl,
        pullsUrl = this.pullsUrl,
        milestonesUrl = this.milestonesUrl,
        notificationsUrl = this.notificationsUrl,
        labelsUrl = this.labelsUrl,
        releasesUrl = this.releasesUrl,
        deploymentsUrl = this.deploymentsUrl,
        createdAt = this.createdAt,
        updatedAt = this.updatedAt,
        pushedAt = this.pushedAt,
        gitUrl = this.gitUrl,
        sshUrl = this.sshUrl,
        cloneUrl = this.cloneUrl,
        svnUrl = this.svnUrl,
        homepage = this.homepage,
        size = this.size,
        stargazersCount = this.stargazersCount,
        watchersCount = this.watchersCount,
        language = this.language,
        hasIssues = this.hasIssues,
        hasProjects = this.hasProjects,
        hasDownloads = this.hasDownloads,
        hasWiki = this.hasWiki,
        hasPages = this.hasPages,
        forksCount = this.forksCount,
        mirrorUrl = this.mirrorUrl,
        archived = this.archived,
        disabled = this.disabled,
        openIssuesCount = this.openIssuesCount,
        license = license,
        forks = this.forks,
        openIssues = this.openIssues,
        watchers = this.watchers,
        defaultBranch = this.defaultBranch,
        score = this.score
    )
